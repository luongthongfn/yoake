// ****************************************************************************
// *                                 mixin                                    *
// ****************************************************************************

$mobile: 768px;
$pc:     1920px;
$lg:     $pc+1px;

@mixin mobile(){
  @media (min-width: $mobile){
    @content;
  }
}
@mixin pc(){
  @media (min-width: $mobile){
    @content;
  }
}
@mixin lg(){
  @media (min-width: $pc){
    @content;
  }
}




@mixin mq($width, $type: min) {

  @if $type==max {
    $width: $width - 1px;
  } @else {
    $width: $width + px;
  }
  @media (#{$type}-width: $width) {
    @content;
  }
}

@mixin mq-mix($width1, $width2) {
  $width1: $width1 + px;
  $width2: $width2 + px;
  @media (min-width: $width1) and (max-width: $width2) {
    @content;
  }
}

@mixin roboto($sizes:'400,700') {
  @import url('https://fonts.googleapis.com/css?family=Roboto:#{$sizes}&subset=vietnamese');
}

@mixin font($name) {
  @font-face {
    font-family: $name;
    src: url('../fonts/'+ $name + '.eot?#iefix') format('embedded-opentype'), url('../fonts/'+ $name + '.woff') format('woff'), url('../fonts/'+ $name + '.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
  }
}

@mixin more() {
  color: #000;
  text-transform: uppercase;
  margin-top: 30px;
  &:hover {
    color: $c2;
  }
}

@mixin as-menu {
  position: relative;
  z-index: 2;
  list-style-type: none;
  padding: 0;
  margin: 0;
  > li {
    // background: #f1f1f1 url(../img/as-bg.png) repeat-y top right;
    &:first-child {
      border-top: none;
    }
  }
  li {

    position: relative;

    a {
      display: block;
      text-decoration: none;
      color: #000; // white-space: nowrap;
      &:hover {
        color: $c1;
      }
    }
  }
}

@mixin as-menu-pc {
  @include mq(992) {
    @include as-menu;
    li {

      &.dropdown {
        position: relative;
        z-index: 1;
        &:hover > .dropdown-content {
          display: block;
          z-index: 999;
          transform: scale(1);
          left: calc(100%);
        }
        .dropdown-content {
          position: absolute;
          list-style-type: none;
          padding: 0px 0px;
          width: 100%;
          top: -0px;
          left: -9999px;
          z-index: -1;
          background: rgba(255, 255, 255, 0.8);
          transform: scale(0.7, 1);
          transform-origin: 0 0;
          transition: transform 0.4s ease;
          box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);
        }
      }
    }
    @content;
  }
}

@mixin as-menu-pc2 {
  @include mq(992) {
    @include as-menu;
    li {
      perspective: 200;
      &.dropdown {
        position: relative;
        z-index: 1;
        &:hover > .dropdown-content {
          display: block;
          z-index: 999;
          transform: rotateY(0deg);
          left: calc(100%);
        }
        .dropdown-content {
          position: absolute;
          list-style-type: none;
          padding: 0px 0px;
          width: 100%;
          top: -0px;
          left: -99999px;
          z-index: -1;
          background: rgba(255, 255, 255, 0.95);
          transform: rotateY(55deg);
          transform-origin: 0 0;
          transition: transform .2s ease;
          box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);
        }
      }
    }
    @content;
  }
}

@mixin as-menu-mb($but-plus-top:10) {
  @include mq(992,
          max) {
    @include as-menu;
    li {

      &:last-child {
        border-bottom: none;
      }
      > a {
        border: none;
      }
      &.dropdown {
        position: relative;
        z-index: 1;
        &:after {
          font-family: FontAwesome;
          content: "\f067";
          position: absolute;
          padding-top: 3px;
          font-size: 16px;
          padding-left: 50px;
          top: $but-plus-top +px;
          right: 16px;
          right: 1rem;
          color: #333;
          line-height: 20px;
        }
        &.is-active {
          &:after {
            content: "\f068";
          }
          > .dropdown-content {
            max-height: 700px;
            padding-left: 10px;
            background: #efefef;
          }
        }
        > a {
          display: inline-block;
        }
        .dropdown-content {
          height: auto;
          max-height: 0;
          overflow: hidden;
          transition: all 0.5s;
          list-style-type: none;
          padding-left: 0;

          li {
            padding-left: 0px !important;
          }
        }
      }
    }
    > li {
      border-top: 1px solid $c-bder;
      padding-left: 0;
      padding-right: 0;
      a {
        border: none !important;
      }
      ul li {
        border-top: 1px solid $c-bder;
      }
    }
    @content;
  }
}

@mixin layout-row( $w-img:40, $mgr:5, $mgb:10) {

  overflow: auto;
  margin-bottom: $mgb+px;
  a {
    img {
      width: $w-img+%;
      float: left;
      margin-right: $mgr+px;
      &:hover {
        opacity: 0.85;
      }
    }
  }
  h3 {
    margin-top: 0;
    &:hover {
      //color: $c1;
    }
  }
  p {
    text-align: justify;
  }
}

@mixin layout-row-r( $w-img:40, $mgr:5, $mgb:10) {

  overflow: auto;
  margin-bottom: $mgb+px;

  img {
    width: $w-img+%;
    float: right;
    margin-left: $mgr+px;
    &:hover {
      opacity: 0.85;
    }
  }

  h3 {
    margin-top: 0;
    &:hover {
      color: $c1;
    }
  }
  p {
    text-align: justify;
  }
}

//---------------------------------------------------button
@mixin button($a, $c) {
  display: inline-block;
  padding: $a;
  border-radius: $c;
  cursor: pointer;
  &:hover {
    filter: brightness(0.8);
    transition: all 0.3s ease;
    text-decoration: none; //color: $c2;
  }
  &:active,
  &:focus {
    filter: brightness(0.6);
    text-decoration: none;
  }
}

@mixin social-hover() {
  overflow: hidden;
  &:hover {
    transition: all 0.5s;
    transform: scale(1.05);
  }
}

//--------------------------------------------------------------------------------------------position
//--------------------------------------------------------------------------------------------position
//--------------------------------------------------------------------------------------------position
@mixin dp-spread {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}

@mixin dp-top-left($t:10, $l:10) {
  position: absolute;
  top: $t+px;
  left: $l+px;
}

@mixin dp-top-right($t:10, $r:10) {
  position: absolute;
  top: $t+px;
  right: $r+px;
}

@mixin dp-top-center($t:10) {
  position: absolute;
  top: $t+px;
  left: 50%;
  transform: translate(-50%, 0);
}

@mixin dp-mid-left($l:10) {
  position: absolute;
  top: 50%;
  left: $l+px;
  transform: translate(0, -50%);
}

@mixin dp-mid-right($r:10) {
  position: absolute;
  top: 50%;
  right: $r+px;
  transform: translate(0, -50%);
}

@mixin dp-mid-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin dp-bot-left($b:10, $l:10) {
  position: absolute;
  bottom: $b+px;
  left: $l+px;
}

@mixin dp-bot-right($b:10, $r:10) {
  position: absolute;
  bottom: $b+px;
  right: $r+px;
}

@mixin dp-bot-center($b:10) {
  position: absolute;
  bottom: $b+px;
  left: 50%;
  transform: translate(-50%, 0);
}

// ---------------------------------------------------------------------------------------------------effect
// ---------------------------------------------------------------------------------------------------effect
// ---------------------------------------------------------------------------------------------------effect
@mixin plus($bg:rgba(0, 0, 0, 0.6), $w:1, $h:30, $ra:0) {
  position: relative;
  outline: 1px solid #fff;
  outline-offset: -5px;
  transition: all 0.3s;
  &:hover {
    outline-color: transparent;
    .dp-spread {
      opacity: 1;
      transform: scale(1);
      &:before {
        transform: translate(-50%, -50%) scale(1, 1);
      }
      &:after {
        transform: translate(-50%, -50%) scale(1, 1);
      }
    }
  }
  .dp-spread {
    position: absolute;
    top: 5px;
    right: 5px;
    bottom: 5px;
    left: 5px;
    opacity: 0;
    transform: scale(0.6);
    transition: all 0.3s;
    background: $bg;
    &:before,
    &:after {
      content: '';
      position: absolute;
      display: inline-block;
      background: #fff;
      transition: all 0.3s;
      border-radius: $ra +px;
      transform-origin: 0 0;
    }
    &:before {
      height: $w + px;
      width: $h +px;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%) scale(0, 1);
      transition-delay: 0.2s;
    }
    &:after {
      width: $w +px;
      height: $h+px;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%) scale(1, 0);
      transition-delay: 0.35s;
    }
  }
}

@mixin rotatey {
  position: relative;
  overflow: hidden;
  &:hover figcaption {
    transform: rotateY(0deg);
  }
  figcaption {
    width: 100%;
    border: solid;
    transition: transform 0.3s;
    transform: rotateY(180deg);
    backface-visibility: hidden;
  }
}

@mixin hover($dur:5) {
  transition: all ($dur/10) + s;
  &:hover {
    filter: brightness(1.1);
    box-shadow: 0 1px 3px -1px #000;
  }
}

@mixin text-fix($height, $line-number) {
  height: $height+px;
  line-height: (($height)/$line-number)+px;
  overflow: hidden;
}

@mixin prod-hver {
  transition: all 0.3s;
  &:hover {
    box-shadow: 0 10px 10px -9px rgba(0, 0, 0, 0.7), 0 0 3px rgba(0, 0, 0, 0.5);
  }
}

@mixin prod-hver2($bxs:0 0 1px 0 rgba(0, 0, 0, 0.4), $c:#fff) {
  background: transparent;
  @if $bxs!=0 {
    box-shadow: $bxs;
  }
  transition: all 0.15s ease-in-out;
  &:hover {
    background: $c;
    box-shadow: 0 5px 30px 0 rgba(36, 50, 66, .14);
  }
}

@mixin prod-hver3() {
  box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
  transition: all .3s cubic-bezier(.25, .8, .25, 1);
  &:hover {
    box-shadow: 0 14px 28px rgba(0, 0, 0, .25), 0 10px 10px rgba(0, 0, 0, .22);
  }
}

@mixin col-lg($width, $order:0) {

  .col-lg-#{$width} {
    position: relative;
    float: left;
    width: ($width/10) +%;
  }
  .col-lg-#{(100 - ($width/10))*10} {
    position: relative;
    float: left;
    width: (100 - ($width/10)) +%;
  }
  @if $order>0 {
    .col-lg-pull-#{$width} {

      right: ($width/10) +%;
    }
    .col-lg-push-#{(100 - ($width/10))*10} {
      left: (100 - ($width/10)) +%;
    }
  }
}

@mixin col-md($width) {
  /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
  .col-md-#{$width} {
    position: relative;
    float: left;
    width: ($width/10) +%;
  }
  .col-md-#{(100 - ($width/10))*10} {
    position: relative;
    float: left;
    width: (100 - ($width/10)) +%;
  }

  .col-md-pull-#{(100 - ($width/10))*10} {

    right: (100 - ($width/10)) +%;
  }
  .col-md-push-#{$width} {
    left: ($width/10) +%;
  }
  /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
}

@mixin scrollbars($size:3px, $foreground-color:#ccc, $background-color: mix($foreground-color, white, 50%)) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }
  // &:hover {
  //     &::-webkit-scrollbar {
  //         width: $size*2;
  //         height: $size*2;
  //     }
  // }
  &::-webkit-scrollbar-thumb {
    background: $foreground-color;
  }

  &::-webkit-scrollbar-track {
    background: $background-color;
  }
  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// translate
@mixin translate($x:0, $y:0) {
  @include transform(translate($x, $y));
}

// skew
@mixin skew($x, $y) {
  @include transform(skew(#{$x}deg,
          #{$y}deg));
}

//transform origin
@mixin transform-origin($origin) {
  moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}

// generic filter
@mixin filter($filter) {
  -moz-filter: $filter;
  -o-filter: $filter;
  -ms-filter: $filter;
  -webkit-filter: $filter;
  filter: $filter;
}

@mixin brightness($deg) {
  @include filter(brightness(#{$deg}));
}

@mixin icon($x, $y, $size:40) {
  $size: $size + px;
  $x: $x+px;
  $y: $y+px;
  display: inline-block;
  width: $size;
  height: $size;
  background-position: -#{$x} -#{$y};
}

//make padding, default left and right
@mixin p($s, $all: 0) {
  @if $all !=0 {
    .p#{$s}-all {
      padding: $s/10 + px;
    }
  } @else {
    .p#{$s} {
      padding: 0px $s/10 + px;
    }
    .m-#{$s} {
      margin: 0px -#{$s/10+px};
    }
  }
}

@mixin flex {
  .dp-flex {
    display: flex;
    flex-wrap: wrap;
  }

  .oder3 {
    order: 3;
  }

  .oder2 {
    order: 2;
  }

  .oder1 {
    order: 1;
  }

  .flex-1of3 {
    flex: 1 1 (100%/3);
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .ai-center {
    align-items: center;
  }

  .ai-flex-end {
    align-items: flex-end;
  }

  .ai-stretch {
    align-items: stretch;
  }

  .as-flex-end {
    align-self: flex-end;
  }

  .jc-space-between {
    justify-content: space-between;
  }

  .jc-space-around {
    justify-content: space-around;
  }
  @include mq(992) {
    .dp-flex-pc {
      display: flex;
      flex-wrap: wrap;
    }
  }
}

//make fix float
@mixin clear() {
  &:after {
    content: '';
    clear: both;
    display: table;
  }
}

@mixin img-hover($scale: 1.2) {
  display: block;
  width: 100%;
  overflow: hidden;
  img {
    @include scale(1);
    transition: all .3s;
    &:hover {
      @include scale($scale);
    }
  }
}

@mixin img-ratio($w, $h) {
  .img-#{$w}by#{$h} {
    position: relative;
    display: block;
    overflow: hidden;
    padding-top: ($h/$w)*100 +%;
    border: solid aqua;
    img {
      position: absolute;
      top: 50%;
      right: 0;
      bottom: 0;
      left: 50%;
      min-height: 100%;
      @include translate(-50%, -50%);
      background: red;
    }
  }
}

@mixin clear-row($col, $break-point:md) {

  $break: 992px;
  $nth: '';
  @if $col == 6 {
    $nth: '2n+1';
  } @else if $col == 4 {
    $nth: '3n+1';
  } @else if $col == 3 {
    $nth: '4n+1';
  }
  @if $break-point==md {
    $break: 992px;
  } @else if $break-point==md
  sm {
    $break: 768px;
  }
@else if $break-point == md xs {
  $break: 480px;
} @else if $break-point == md xxs {
  $break: 0px;
}

  @media (max-width: $break) {
    .clear-#{$break-point}-#{$col} {
      &:nth-of-type(#{$nth}) {
        clear: both;
      }
    }
  }
}
